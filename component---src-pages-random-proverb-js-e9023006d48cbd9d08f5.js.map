{"version":3,"sources":["webpack:///./src/pages/random-proverb.js","webpack:///./src/components/page-title.js","webpack:///./src/components/layout.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"],"names":["RandomProverbPage","titleText","href","RandomProverb","proverbs","text","author","getRandomProverb","Math","floor","random","length","RandomProverbWrapper","props","state","proverb","handleClick","bind","this","setState","render","className","Proverb","Button","onClick","React","Component","styled","PageTitle","Wrapper","h1","Layout","LayoutWrapper","children","BaseLayout","_assertThisInitialized","self","ReferenceError"],"mappings":"qNAIe,SAASA,IACtB,OACE,kBAAC,IAAD,CAAQC,UAAU,kBAChB,wFAC6D,IAC3D,uBAAGC,KAAK,kCAAR,wBAFF,KAIA,kBAACC,EAAD,OAKN,IAAMC,EAAW,CACf,CACEC,KAAM,oEACNC,OAAQ,UAEV,CACED,KAAM,gDACNC,OAAQ,kBAEV,CAAED,KAAM,kBAAmBC,OAAQ,iBACnC,CAAED,KAAM,6BAA8BC,OAAQ,WAC9C,CAAED,KAAM,8BAA+BC,OAAQ,WAC/C,CAAED,KAAM,2BAA4BC,OAAQ,YAC5C,CAAED,KAAM,0BAA2BC,OAAQ,YAC3C,CACED,KAAM,kDACNC,OAAQ,YAIZ,SAASC,IACP,OAAOH,EAASI,KAAKC,MAAMD,KAAKE,SAAWN,EAASO,S,IAGhDC,E,YACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CACXC,QAASR,KAEX,EAAKS,YAAc,EAAKA,YAAYC,KAAjB,gBALF,E,4CAQnBD,YAAA,WACEE,KAAKC,SAAS,CACZJ,QAASR,O,EAIba,OAAA,WACE,OACE,yBAAKC,UAAWH,KAAKL,MAAMQ,WACzB,kBAACC,EAAYJ,KAAKJ,MAAMC,SACxB,kBAACQ,EAAD,CAAQC,QAASN,KAAKF,gB,GAnBKS,IAAMC,WAyBnCvB,EAAgBwB,YAAOf,GAAV,gFAAGe,CAAH,8TAiCbL,EAAU,SAAC,GAAD,IAAGjB,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OACd,oCACE,2BAAID,GACJ,gCAASC,KAIb,SAASiB,EAAOV,GACd,OAAO,2BAAYA,EAAZ,mB,iICvGM,SAASe,EAAUf,GAChC,OAAO,kBAACgB,EAAD,KAAUhB,EAAMZ,WAGzB,IAAM4B,EAAUF,IAAOG,GAAV,sEAAGH,CAAH,uCCDE,SAASI,EAAOlB,GAC7B,OACE,kBAACmB,EAAkBnB,EACjB,kBAACe,EAAD,CAAW3B,UAAWY,EAAMZ,YAC3BY,EAAMoB,UAKb,IAAMD,EAAgBL,YAAOO,KAAV,2EAAGP,CAAH,gE,kCCfJ,SAASQ,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,EALT","file":"component---src-pages-random-proverb-js-e9023006d48cbd9d08f5.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport Layout from \"../components/layout\"\n\nexport default function RandomProverbPage() {\n  return (\n    <Layout titleText=\"Random Proverb\">\n      <p>\n        Inspired by something similar for Latin proverbs on top of{\" \"}\n        <a href=\"http://www.wheelockslatin.com/\">Wheelock's Latin.com</a>.\n      </p>\n      <RandomProverb />\n    </Layout>\n  )\n}\n\nconst proverbs = [\n  {\n    text: \"Wer fremde Sprachen nicht kennt, weiss nichts von seiner eigenen.\",\n    author: \"Goethe\",\n  },\n  {\n    text: \"Apprendre une langue, c'est vivre de nouveau.\",\n    author: \"French proverb\",\n  },\n  { text: \"Nosce te ipsum.\", author: \"Greek proverb\" },\n  { text: \"Mens sana in corpore sano.\", author: \"Juvenal\" },\n  { text: \"Vitia erunt, donec homines.\", author: \"Tacitus\" },\n  { text: \"Si tardus eris, errabis.\", author: \"Tibullus\" },\n  { text: \"Dominus dat sapientiam.\", author: \"Proverbs\" },\n  {\n    text: \"Humanum amare est, humanum autem ignoscere est.\",\n    author: \"Plautus\",\n  },\n]\n\nfunction getRandomProverb() {\n  return proverbs[Math.floor(Math.random() * proverbs.length)]\n}\n\nclass RandomProverbWrapper extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      proverb: getRandomProverb(),\n    }\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick() {\n    this.setState({\n      proverb: getRandomProverb(),\n    })\n  }\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        <Proverb {...this.state.proverb} />\n        <Button onClick={this.handleClick} />\n      </div>\n    )\n  }\n}\n\nconst RandomProverb = styled(RandomProverbWrapper)`\n  padding: 1em 0 1em 2ch;\n\n  blockquote {\n    margin: 3em 0 4em;\n    max-width: 50ch;\n    min-height: 6em;\n  }\n\n  footer {\n    font-style: italic;\n    text-align: right;\n    margin-right: 6ch;\n  }\n\n  footer::before {\n    content: \"-\";\n  }\n\n  button {\n    padding: 8px 8px;\n    border: 1px solid;\n    border-radius: 2px;\n    color: #666;\n    cursor: pointer;\n    background-color: #fff;\n  }\n\n  button:hover {\n    background-color: #eee;\n  }\n`\n\nconst Proverb = ({ text, author }) => (\n  <blockquote>\n    <p>{text}</p>\n    <footer>{author}</footer>\n  </blockquote>\n)\n\nfunction Button(props) {\n  return <button {...props}>Get a new one</button>\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nexport default function PageTitle(props) {\n  return <Wrapper>{props.titleText}</Wrapper>\n}\n\nconst Wrapper = styled.h1`\n  font-size: 1.8em;\n  margin: 0 0 1.2em;\n`\n","import React from \"react\"\nimport \"normalize.css\"\nimport BaseLayout from \"./base-layout\"\nimport PageTitle from \"../components/page-title\"\nimport styled from \"styled-components\"\n\nexport default function Layout(props) {\n  return (\n    <LayoutWrapper {...props}>\n      <PageTitle titleText={props.titleText} />\n      {props.children}\n    </LayoutWrapper>\n  )\n}\n\nconst LayoutWrapper = styled(BaseLayout)`\n  header a[href=\"/\"]:hover {\n    text-decoration-line: underline;\n  }\n`\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}"],"sourceRoot":""}