{"version":3,"sources":["webpack:///./src/components/page-title.js","webpack:///./src/components/layout.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./src/pages/comparing-2-img.js"],"names":["PageTitle","props","Wrapper","titleText","styled","h1","Layout","LayoutWrapper","children","BaseLayout","_assertThisInitialized","self","ReferenceError","Comparing2ImagPage","Comparing2Imag","leftImg","src","alt","rightImg","Comparing2ImagWrapper","handleChange","bind","state","percentage","e","target","value","this","setState","document","getElementById","style","width","toFixed","componentDidMount","render","className","id","onChange","type","min","max","step","React","Component"],"mappings":"0LAGe,SAASA,EAAUC,GAChC,OAAO,kBAACC,EAAD,KAAUD,EAAME,WAGzB,IAAMD,EAAUE,IAAOC,GAAV,sEAAGD,CAAH,uCCDE,SAASE,EAAOL,GAC7B,OACE,kBAACM,EAAkBN,EACjB,kBAACD,EAAD,CAAWG,UAAWF,EAAME,YAC3BF,EAAMO,UAKb,IAAMD,EAAgBH,YAAOK,KAAV,2EAAGL,CAAH,gE,kCCfJ,SAASM,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,EALT,mC,0JCIe,SAASE,IAStB,OACE,kBAAC,IAAD,CAAQV,UAAU,sBAChB,kBAACW,EAAD,CAAgBC,QAVJ,CACdC,IAAK,yBACLC,IAAK,0CAQ+BC,SANrB,CACfF,IAAK,qBACLC,IAAK,oDAIH,mBACkB,8DADlB,8D,IAQAE,E,YACJ,WAAYlB,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKmB,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,MAAQ,CAAEC,WAAY,KAHV,E,4CAMnBH,aAAA,SAAaI,GACX,IAAMD,EAAaC,EAAEC,OAAOC,MAC5BC,KAAKC,SAAS,CAAEL,WAAYA,IAC5BM,SAASC,eAAe,YAAYC,MAAMC,OAC1B,IAAbT,GAAkBU,QAAQ,GAAK,M,EAGpCC,kBAAA,WACEL,SAASC,eAAe,YAAYC,MAAMC,OACf,IAAxBL,KAAKL,MAAMC,YAAkBU,QAAQ,GAAK,M,EAG/CE,OAAA,WACE,IAAMZ,EAAaI,KAAKL,MAAMC,WAC9B,OACE,4BAAQa,UAAWT,KAAK1B,MAAMmC,WAC5B,yBAAKC,GAAG,YACN,wBAASV,KAAK1B,MAAMc,UAEtB,wBAASY,KAAK1B,MAAMiB,UACpB,2BACEQ,MAAOH,EACPe,SAAUX,KAAKP,aACfmB,KAAK,QACLC,IAAI,IACJC,IAAI,IACJC,KAAK,QAEP,oCAAaf,KAAK1B,MAAMO,Y,GAnCImC,IAAMC,WAyCpC9B,EAAiBV,YAAOe,GAAV,kFAAGf,CAAH","file":"component---src-pages-comparing-2-img-js-2734f818ed09e1da9d8d.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nexport default function PageTitle(props) {\n  return <Wrapper>{props.titleText}</Wrapper>\n}\n\nconst Wrapper = styled.h1`\n  font-size: 1.8em;\n  margin: 0 0 1.2em;\n`\n","import React from \"react\"\nimport \"normalize.css\"\nimport BaseLayout from \"./base-layout\"\nimport PageTitle from \"../components/page-title\"\nimport styled from \"styled-components\"\n\nexport default function Layout(props) {\n  return (\n    <LayoutWrapper {...props}>\n      <PageTitle titleText={props.titleText} />\n      {props.children}\n    </LayoutWrapper>\n  )\n}\n\nconst LayoutWrapper = styled(BaseLayout)`\n  header a[href=\"/\"]:hover {\n    text-decoration-line: underline;\n  }\n`\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React from \"react\"\nimport styled from \"styled-components\"\nimport Layout from \"../components/layout\"\n\nexport default function Comparing2ImagPage() {\n  const leftImg = {\n    src: \"/woodcut/woodblock.jpg\",\n    alt: \"Woodblock Martyrdom of Saint Sebastian\",\n  }\n  const rightImg = {\n    src: \"/woodcut/print.jpg\",\n    alt: \"Print of woodblock Martyrdom of Saint Sebastian\",\n  }\n  return (\n    <Layout titleText=\"Comparing 2 Images\">\n      <Comparing2Imag leftImg={leftImg} rightImg={rightImg}>\n        Left: woodblcok <cite>Martyrdom of Saint Sebastian</cite> (reversed\n        horizontally); right: print of same woodblcok.\n      </Comparing2Imag>\n    </Layout>\n  )\n}\n\nclass Comparing2ImagWrapper extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n    this.state = { percentage: 0.55 }\n  }\n\n  handleChange(e) {\n    const percentage = e.target.value\n    this.setState({ percentage: percentage })\n    document.getElementById(\"left-img\").style.width =\n      (percentage * 300).toFixed(2) + \"px\"\n  }\n\n  componentDidMount() {\n    document.getElementById(\"left-img\").style.width =\n      (this.state.percentage * 300).toFixed(2) + \"px\"\n  }\n\n  render() {\n    const percentage = this.state.percentage\n    return (\n      <figure className={this.props.className}>\n        <div id=\"left-img\">\n          <img {...this.props.leftImg} />\n        </div>\n        <img {...this.props.rightImg} />\n        <input\n          value={percentage}\n          onChange={this.handleChange}\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"any\"\n        />\n        <figcaption>{this.props.children}</figcaption>\n      </figure>\n    )\n  }\n}\n\nconst Comparing2Imag = styled(Comparing2ImagWrapper)`\n  margin: 0;\n  position: relative;\n\n  &,\n  img,\n  input {\n    width: 320px;\n  }\n\n  input {\n    height: 40px;\n  }\n\n  > div {\n    overflow: hidden;\n    border-right: 2px solid #eee;\n  }\n\n  > img {\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: -1;\n  }\n\n  figcaption {\n    margin-top: 1em;\n  }\n`\n"],"sourceRoot":""}